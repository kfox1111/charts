apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "fullname" . }}
      {{- else }}
      serviceAccountName: {{ .Values.rbac.serviceAccountName }}
      {{- end }}
      terminationGracePeriodSeconds: 60
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      containers:
      - image: {{ .Values.image }}:{{ .Values.imageTag }}
        name: main
        command:
        - /bin/bash
        - -c
#FIXME we probably should build a proper container with this dep in it.
        - |
          pip install cheetah3
          exec /entrypoint.sh /usr/bin/supervisord
        resources:
{{ toYaml .Values.resources | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: 80
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          tcpSocket:
            port: 80
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        volumeMounts:
        - mountPath: /app/main.py
          name: server
          subPath: server.py
        ports:
        - containerPort: 80
          name: http
      volumes:
      - name: server
        configMap:
          name: {{ template "fullname" . }}-code
